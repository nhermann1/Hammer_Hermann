# Actual data ---------------------------------------------------
set.seed(42)
setwd("~/UNH Research/Hammer_Hermann/Data/") #Nate's file structure
library(tidyverse)
library(ggplot2)
library(reshape2)
library(tidyr)
library(dplyr)
library(grid)
library(RColorBrewer)
library(readr)
library(gridExtra)
library(lubridate)
library(reshape2)
library(vegan)
library(RVAideMemoire)
library(MuMIn)
library(BiodiversityR)
library(rphylopic)
library(png)
#Colorblind friendly palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#To use, add command for scale_fill_manual(values=cbPalette)
theme_set(theme_bw(base_size=25))
'%notin%'<-Negate('%in%')
details<-read_csv("all_dietcontents_final_v2.csv")
summaries<-read_csv("all_dietsummaries_final.csv")
dietMat<-read_csv("all_diet_PAdietMat_final_v2.csv")
library(car)
library(MuMIn)
library(lme4)
library(lmerTest)
##removing unneccesary columns and unusable data
relcon <- summaries[,1:9] ## unneccessary columns
relcon <- subset(relcon, !is.na(Diet_Mass_g)) ## removing fish with unknown diet masses
relcon <- subset(relcon, !is.na(Mass_g)) ## removing fish with unknown masses
n_distinct(relcon$Fish_ID) ##127 useable fish for relcon analysis
##relative consumption column
relcon$relative_consumption <- (relcon$Diet_Mass_g/relcon$Mass_g)*100
relcon$Date_pos <- as.POSIXct(relcon$Date, format = '%m/%d/%y')
relcon$month <- factor(month(relcon$Date_pos)) ##make sure month is a factor
relcon$Year <- factor(relcon$Year) ## make sure year is a factor
relcon$species2 <- factor(ifelse(relcon$Species == 'Slimy' | relcon$Species == 'Fourhorn', 'Sculpin', 'Arctic char'))
relcon %>%
group_by(species2, Year) %>%
summarize(mean = mean(relative_consumption))
relcon %>% group_by(species2) %>%
summarize(min = min(relative_consumption), max = max(relative_consumption))
View(relcon)
relcon %>% group_by(species2) %>%
summarize(min = min(relative_consumption), max = max(relative_consumption),
mean = mean(relative_consumption), se = sd(relative_consumption)/sqrt(n()))
