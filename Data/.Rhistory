library(grid)
library(RColorBrewer)
library(readr)
library(gridExtra)
library(lubridate)
library(reshape2)
library(vegan)
library(MuMIn)
culppaa <- subset(dietMat, Species == 'Fourhorn' | Species == 'Slimy')
charpaa <- subset(dietMat, Species == 'Arctic char')
##needs to be dataframe for accumcomp to work
sculpenv <- data.frame(sculppaa[,1:3])
charenv <- data.frame(charpaa[,1:3])
sculpcom <- data.frame(sculppaa[,13:31])
charcom <- data.frame(charpaa[,13:31])
##creation of data must be done separately as far as I know
##sculpin
Accum.sculp <- accumcomp(sculpcom, y=sculpenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.sculp
accum.longsculp <- accumcomp.long(Accum.sculp, ci = NA, label.freq = 5)
head(accum.longsculp)
##test for sculpin
sculpenv2 <- sculpenv
sculpenv2$test <- 1
Accum.sculp2 <- accumcomp(sculpcom, y = sculpenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longsculp2 <- accumcomp.long(Accum.sculp2, ci = NA, label.freq = 5)
accum.longsculp2$Species <- 'Sculpin'
##char
Accum.char <- accumcomp(charcom, y=charenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.char
accum.longchar <- accumcomp.long(Accum.char, ci = NA, label.freq = 5)
head(accum.longchar)
##test for char
charenv2 <- charenv
charenv2$test <- 1
Accum.char2 <- accumcomp(charcom, y = charenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longchar2 <- accumcomp.long(Accum.char2, ci = NA, label.freq = 5)
accum.longchar2$Species <- 'Arctic char'
accum.longchar$Species <- 'Arctic char' ##creating a column for species so we can bind together
accum.longsculp$Species <- 'Sculpin'
accum.long <- rbind(accum.longchar, accum.longsculp)
accum.long2 <- rbind(accum.longchar2, accum.longsculp2)
##plot
PAAplot <- ggplot(data = accum.long, aes(x = Sites, y = Richness,ymax = UPR, ymin = LWR))+
facet_wrap(~Species, ncol = 1)+
geom_line(aes(color = Grouping), size = 2)+
geom_point(data=subset(accum.long, labelit==TRUE),
aes(colour=Grouping),size = 5)+
scale_color_manual(values = c('black', 'grey50', 'grey80'))+
geom_line(data = accum.long2, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR), lty = 2)+
# geom_ribbon(aes(color=Grouping), alpha = 0.2, show.legend = F)+
labs(x = 'Number of Samples', y = 'Species Richness', color = 'Year')+theme_bw()
accum.long <- rbind(accum.longchar, accum.longsculp)
sculppaa <- subset(dietMat, Species == 'Fourhorn' | Species == 'Slimy')
charpaa <- subset(dietMat, Species == 'Arctic char')
##needs to be dataframe for accumcomp to work
sculpenv <- data.frame(sculppaa[,1:3])
charenv <- data.frame(charpaa[,1:3])
sculpcom <- data.frame(sculppaa[,13:31])
charcom <- data.frame(charpaa[,13:31])
##creation of data must be done separately as far as I know
##sculpin
Accum.sculp <- accumcomp(sculpcom, y=sculpenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
library(car)
library(MuMIn)
library(lme4)
library(lmerTest)
library(usedist)
sculppaa <- subset(dietMat, Species == 'Fourhorn' | Species == 'Slimy')
charpaa <- subset(dietMat, Species == 'Arctic char')
##needs to be dataframe for accumcomp to work
sculpenv <- data.frame(sculppaa[,1:3])
charenv <- data.frame(charpaa[,1:3])
sculpcom <- data.frame(sculppaa[,13:31])
charcom <- data.frame(charpaa[,13:31])
##creation of data must be done separately as far as I know
##sculpin
Accum.sculp <- accumcomp(sculpcom, y=sculpenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.sculp
accum.longsculp <- accumcomp.long(Accum.sculp, ci = NA, label.freq = 5)
head(accum.longsculp)
##test for sculpin
sculpenv2 <- sculpenv
sculpenv2$test <- 1
Accum.sculp2 <- accumcomp(sculpcom, y = sculpenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longsculp2 <- accumcomp.long(Accum.sculp2, ci = NA, label.freq = 5)
accum.longsculp2$Species <- 'Sculpin'
library(vegan)
library(RVAideMemoire)
library(usedist)
library(indicspecies)
sculppaa <- subset(dietMat, Species == 'Fourhorn' | Species == 'Slimy')
charpaa <- subset(dietMat, Species == 'Arctic char')
##needs to be dataframe for accumcomp to work
sculpenv <- data.frame(sculppaa[,1:3])
charenv <- data.frame(charpaa[,1:3])
sculpcom <- data.frame(sculppaa[,13:31])
charcom <- data.frame(charpaa[,13:31])
##creation of data must be done separately as far as I know
##sculpin
Accum.sculp <- accumcomp(sculpcom, y=sculpenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.sculp
accum.longsculp <- accumcomp.long(Accum.sculp, ci = NA, label.freq = 5)
head(accum.longsculp)
library(BiodiversityR)
library(tidyverse)
library(ggplot2)
library(reshape2)
library(tidyr)
library(dplyr)
library(grid)
library(RColorBrewer)
library(readr)
library(gridExtra)
library(lubridate)
library(reshape2)
library(vegan)
library(MuMIn)
library(BiodiversityR)
library(rphylopic)
library(png)
sculppaa <- subset(dietMat, Species == 'Fourhorn' | Species == 'Slimy')
charpaa <- subset(dietMat, Species == 'Arctic char')
##needs to be dataframe for accumcomp to work
sculpenv <- data.frame(sculppaa[,1:3])
charenv <- data.frame(charpaa[,1:3])
sculpcom <- data.frame(sculppaa[,13:31])
charcom <- data.frame(charpaa[,13:31])
##creation of data must be done separately as far as I know
##sculpin
Accum.sculp <- accumcomp(sculpcom, y=sculpenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.sculp
accum.longsculp <- accumcomp.long(Accum.sculp, ci = NA, label.freq = 5)
head(accum.longsculp)
##test for sculpin
sculpenv2 <- sculpenv
sculpenv2$test <- 1
Accum.sculp2 <- accumcomp(sculpcom, y = sculpenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longsculp2 <- accumcomp.long(Accum.sculp2, ci = NA, label.freq = 5)
accum.longsculp2$Species <- 'Sculpin'
##char
Accum.char <- accumcomp(charcom, y=charenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.char
accum.longchar <- accumcomp.long(Accum.char, ci = NA, label.freq = 5)
head(accum.longchar)
##test for char
charenv2 <- charenv
charenv2$test <- 1
Accum.char2 <- accumcomp(charcom, y = charenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longchar2 <- accumcomp.long(Accum.char2, ci = NA, label.freq = 5)
accum.longchar2$Species <- 'Arctic char'
accum.longchar$Species <- 'Arctic char' ##creating a column for species so we can bind together
accum.longsculp$Species <- 'Sculpin'
accum.long <- rbind(accum.longchar, accum.longsculp)
accum.long2 <- rbind(accum.longchar2, accum.longsculp2)
##plot
PAAplot <- ggplot(data = accum.long, aes(x = Sites, y = Richness,ymax = UPR, ymin = LWR))+
facet_wrap(~Species, ncol = 1)+
geom_line(aes(color = Grouping), size = 2)+
geom_point(data=subset(accum.long, labelit==TRUE),
aes(colour=Grouping),size = 5)+
scale_color_manual(values = c('black', 'grey50', 'grey80'))+
geom_line(data = accum.long2, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR), lty = 2)+
# geom_ribbon(aes(color=Grouping), alpha = 0.2, show.legend = F)+
labs(x = 'Number of Samples', y = 'Species Richness', color = 'Year')+theme_bw()
ggplot(data = accum.long, aes(x = Sites, y = Richness,ymax = UPR, ymin = LWR))+
facet_wrap(~Species, ncol = 1)+
geom_line(aes(color = Grouping), size = 2)+
geom_point(data=subset(accum.long, labelit==TRUE),
aes(colour=Grouping),size = 5)+
scale_color_manual(values = c('black', 'grey50', 'grey80'))+
geom_line(data = accum.long2, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR), lty = 2)+
# geom_ribbon(aes(color=Grouping), alpha = 0.2, show.legend = F)+
labs(x = 'Number of Samples', y = 'Species Richness', color = 'Year')+theme_bw()
library(car)
library(MuMIn)
library(lme4)
library(lmerTest)
##removing unneccesary columns and unusable data
relcon <- summaries[,1:9] ## unneccessary columns
relcon <- subset(relcon, !is.na(Diet_Mass_g)) ## removing fish with unknown diet masses
relcon <- subset(relcon, !is.na(Mass_g)) ## removing fish with unknown masses
n_distinct(relcon$Fish_ID) ##127 useable fish for relcon analysis
##relative consumption column
relcon$relative_consumption <- (relcon$Diet_Mass_g/relcon$Mass_g)*100
View(relcon)
##removing unneccesary columns and unusable data
relcon <- summaries[,1:9] ## unneccessary columns
View(relcon)
View(summaries)
View(summaries)
relconplot
relcon <- summaries[,1:9] ## unneccessary columns
relcon <- subset(relcon, !is.na(Diet_Mass_g)) ## removing fish with unknown diet masses
relcon <- subset(relcon, !is.na(Mass_g)) ## removing fish with unknown masses
n_distinct(relcon$Fish_ID) ##127 useable fish for relcon analysis
##relative consumption column
relcon$relative_consumption <- (relcon$Diet_Mass_g/relcon$Mass_g)*100
relcon$Date_pos <- as.POSIXct(relcon$Date, format = '%m/%d/%y')
relcon$month <- factor(month(relcon$Date_pos)) ##make sure month is a factor
relcon$Year <- factor(relcon$Year) ## make sure year is a factor
relcon$species2 <- factor(ifelse(relcon$Species == 'Slimy' | relcon$Species == 'Fourhorn', 'Sculpin', 'Arctic char'))
relcon %>%
group_by(species2, Year) %>%
summarize(mean = mean(relative_consumption))
relcon %>% group_by(species2) %>%
summarize(min = min(relative_consumption), max = max(relative_consumption))
relcon <- summaries[,1:9] ## unneccessary columns
relcon <- subset(relcon, !is.na(Diet_Mass_g)) ## removing fish with unknown diet masses
relcon <- subset(relcon, !is.na(Mass_g)) ## removing fish with unknown masses
n_distinct(relcon$Fish_ID) ##127 useable fish for relcon analysis
##relative consumption column
relcon$relative_consumption <- (relcon$Diet_Mass_g/relcon$Mass_g)*100
relcon$Date_pos <- as.POSIXct(relcon$Date, format = '%m/%d/%y')
relcon$month <- factor(month(relcon$Date_pos)) ##make sure month is a factor
relcon$Year <- factor(relcon$Year) ## make sure year is a factor
relcon$species2 <- factor(ifelse(relcon$Species == 'Slimy' | relcon$Species == 'Fourhorn', 'Sculpin', 'Arctic char'))
relcon %>%
group_by(species2, Year) %>%
summarize(mean = mean(relative_consumption))
relcon %>% group_by(species2) %>%
summarize(min = min(relative_consumption), max = max(relative_consumption))
##first we need to determine factors affecting whether we feed or not
relcon$feed <- ifelse(relcon$relative_consumption > 0, 1, 0)
table(relcon$feed, relcon$species2) ##looks right at least for char
##don't bother with mass because species are so different in weight already
bingelm1 <- glm(feed~species2 + Year + month, data = relcon, na.action = 'na.fail', family = 'binomial')
vif(bingelm1)
dredge(bingelm1) ##species is the only thing that comes out might be best as a table
##now removing those who didn't feed
relcon2 <- subset(relcon, feed == 1)
bingelm2 <- glm(relative_consumption ~ species2 + Year + month, data = relcon2,
na.action = 'na.fail', family = 'Gamma')
vif(bingelm2)
dredge(bingelm2)
relconplot <- ggplot(relcon2)+
geom_boxplot(aes(x = Year, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption), position = position_jitter(width = .2))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
relconplot
View(relcon2)
empties <- subset(relcon2, Diet_Mass_g == 0)
notempty <- subset(relcon2, Diet_Mass_g != 0)
empties <- subset(relcon, Diet_Mass_g == 0)
notempty <- subset(relcon, Diet_Mass_g != 0)
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption, shape = feed), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
relconplot
relconplot
##first we need to determine factors affecting whether we feed or not
relcon$feed <- factor(ifelse(relcon$relative_consumption > 0, 1, 0))
table(relcon$feed, relcon$species2) ##looks right at least for char
##don't bother with mass because species are so different in weight already
bingelm1 <- glm(feed~species2 + Year + month, data = relcon, na.action = 'na.fail', family = 'binomial')
vif(bingelm1)
dredge(bingelm1) ##species is the only thing that comes out might be best as a table
##now removing those who didn't feed
relcon2 <- subset(relcon, feed == 1)
bingelm2 <- glm(relative_consumption ~ species2 + Year + month, data = relcon2,
na.action = 'na.fail', family = 'Gamma')
vif(bingelm2)
dredge(bingelm2)
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption, shape = feed), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
relconplot
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption, shape = feed), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2))+
scale_shape_manual(c(18, 21))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
relconplot
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption, shape = feed), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2))+
scale_shape_manual(values = c(18, 21))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
relconplot
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption, shape = feed), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2))+
scale_shape_manual(values = c(21, 18))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
relconplot
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption, shape = feed), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2))+
scale_shape_manual(values = 21, 18)+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
relconplot
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption, shape = feed), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2))+
scale_shape_manual(values = c(21, 18))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
relconplot
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption, shape = feed), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2))+
scale_shape_manual(values = c(21, 19))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
relconplot
ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption, shape = feed), outlier.shape = NA)
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2))+
scale_shape_manual(values = c(21, 19))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
relconplot
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2))+
scale_shape_manual(values = c(21, 19), labels = c('Yes', 'No'))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)', shape = "Empty Stomach")
relconplot
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2), show.legend = F)+
scale_shape_manual(values = c(21, 19))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
relconplot
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2), show.legend = F)+
scale_shape_manual(values = c(21, 19))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')+
theme_bw()
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2), show.legend = F)+
scale_shape_manual(values = c(21, 19))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')+
theme_bw()
relconplot
##only do this once
tiff('/users/larshammer/Hammer_Hermann/Figures/RelativeConsumption_year.tiff', width = 6.5, height = 5.5, res = 300, units = 'in')
relconplot
dev.off()
##looking at mass
ggplot(relcon)+
geom_point(aes(x = Mass_g, y = relative_consumption), position = position_jitter(width = .2))+
facet_grid(~species2, scales = "free_x")+
labs(y = 'Relative Consumption (%)')
View(summaries)
rm(list=ls())
rm(list=ls())
setwd("C:/Users/nh1087/OneDrive - USNH/Documents/UNH Research/Data/CSV_Files/")
set.seed(42)
library(tidyverse)
library(ggplot2)
library(reshape2)
library(tidyr)
library(dplyr)
library(grid)
library(RColorBrewer)
library(readr)
library(gridExtra)
library(lubridate)
library(reshape2)
library(vegan)
library(MuMIn)
#Colorblind friendly palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#To use, add command for scale_fill_manual(values=cbPalette)
theme_set(theme_bw(base_size=25))
'%notin%'<-Negate('%in%')
set.seed(42)
setwd("UNH Research/Hammer_Hermann/Data/") #Nate's file structure
setwd("/Users/larshammer/Hammer_Hermann/Data/") #Lars' file structure
library(tidyverse)
library(ggplot2)
library(reshape2)
library(tidyr)
library(dplyr)
library(grid)
library(RColorBrewer)
library(readr)
library(gridExtra)
library(lubridate)
library(reshape2)
library(vegan)
library(MuMIn)
library(BiodiversityR)
library(rphylopic)
library(png)
#Colorblind friendly palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#To use, add command for scale_fill_manual(values=cbPalette)
theme_set(theme_bw(base_size=25))
'%notin%'<-Negate('%in%')
details<-read_csv("all_dietcontents_final_v2.csv")
summaries<-read_csv("all_dietsummaries_final.csv")
dietMat<-read_csv("all_diet_PAdietMat_final_v2.csv")
sculppaa <- subset(dietMat, Species == 'Fourhorn' | Species == 'Slimy')
charpaa <- subset(dietMat, Species == 'Arctic char')
##needs to be dataframe for accumcomp to work
sculpenv <- data.frame(sculppaa[,1:3])
charenv <- data.frame(charpaa[,1:3])
sculpcom <- data.frame(sculppaa[,13:31])
charcom <- data.frame(charpaa[,13:31])
##creation of data must be done separately as far as I know
##sculpin
Accum.sculp <- accumcomp(sculpcom, y=sculpenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.sculp
accum.longsculp <- accumcomp.long(Accum.sculp, ci = NA, label.freq = 5)
head(accum.longsculp)
##test for sculpin
sculpenv2 <- sculpenv
sculpenv2$test <- 1
Accum.sculp2 <- accumcomp(sculpcom, y = sculpenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longsculp2 <- accumcomp.long(Accum.sculp2, ci = NA, label.freq = 5)
accum.longsculp2$Species <- 'Sculpin'
##char
Accum.char <- accumcomp(charcom, y=charenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.char
accum.longchar <- accumcomp.long(Accum.char, ci = NA, label.freq = 5)
head(accum.longchar)
##test for char
charenv2 <- charenv
charenv2$test <- 1
Accum.char2 <- accumcomp(charcom, y = charenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longchar2 <- accumcomp.long(Accum.char2, ci = NA, label.freq = 5)
accum.longchar2$Species <- 'Arctic char'
accum.longchar$Species <- 'Arctic char' ##creating a column for species so we can bind together
accum.longsculp$Species <- 'Sculpin'
accum.long <- rbind(accum.longchar, accum.longsculp)
accum.long2 <- rbind(accum.longchar2, accum.longsculp2)
##plot
PAAplot <- ggplot(data = accum.long, aes(x = Sites, y = Richness,ymax = UPR, ymin = LWR))+
facet_wrap(~Species, ncol = 1)+
geom_line(aes(color = Grouping), size = 2)+
geom_point(data=subset(accum.long, labelit==TRUE),
aes(colour=Grouping),size = 5)+
scale_color_manual(values = c('black', 'grey50', 'grey80'))+
geom_line(data = accum.long2, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR), lty = 2)+
# geom_ribbon(aes(color=Grouping), alpha = 0.2, show.legend = F)+
labs(x = 'Number of Samples', y = 'Species Richness', color = 'Year')+theme_bw()
PAAplot
library(car)
library(MuMIn)
library(lme4)
library(lmerTest)
##removing unneccesary columns and unusable data
relcon <- summaries[,1:9] ## unneccessary columns
relcon <- subset(relcon, !is.na(Diet_Mass_g)) ## removing fish with unknown diet masses
relcon <- subset(relcon, !is.na(Mass_g)) ## removing fish with unknown masses
n_distinct(relcon$Fish_ID) ##127 useable fish for relcon analysis
##relative consumption column
relcon$relative_consumption <- (relcon$Diet_Mass_g/relcon$Mass_g)*100
relcon$Date_pos <- as.POSIXct(relcon$Date, format = '%m/%d/%y')
relcon$month <- factor(month(relcon$Date_pos)) ##make sure month is a factor
relcon$Year <- factor(relcon$Year) ## make sure year is a factor
relcon$species2 <- factor(ifelse(relcon$Species == 'Slimy' | relcon$Species == 'Fourhorn', 'Sculpin', 'Arctic char'))
relcon %>%
group_by(species2, Year) %>%
summarize(mean = mean(relative_consumption))
relcon %>% group_by(species2) %>%
summarize(min = min(relative_consumption), max = max(relative_consumption))
##running a hurdle model
##first we need to determine factors affecting whether we feed or not
relcon$feed <- factor(ifelse(relcon$relative_consumption > 0, 1, 0))
table(relcon$feed, relcon$species2) ##looks right at least for char
##don't bother with mass because species are so different in weight already
bingelm1 <- glm(feed~species2 + Year + month, data = relcon, na.action = 'na.fail', family = 'binomial')
vif(bingelm1)
dredge(bingelm1) ##species is the only thing that comes out might be best as a table
##now removing those who didn't feed
relcon2 <- subset(relcon, feed == 1)
bingelm2 <- glm(relative_consumption ~ species2 + Year + month, data = relcon2,
na.action = 'na.fail', family = 'Gamma')
vif(bingelm2)
dredge(bingelm2)
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption, shape = feed), position = position_jitter(width = .2), show.legend = F)+
scale_shape_manual(values = c(21, 19))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')+
theme_bw()
relconplot
##only do this once
tiff('/users/larshammer/Hammer_Hermann/Figures/RelativeConsumption_year.tiff', width = 6.5, height = 5.5, res = 300, units = 'in')
relconplot
dev.off()
View(relcon)
