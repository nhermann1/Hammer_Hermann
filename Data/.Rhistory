facet_grid(year~icegroup, labeller = labeller(icegroup = grouplabs))+theme_bw()+
theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14),axis.text.x = element_text(angle = -90, vjust = .5),
legend.title = element_blank(), legend.text = element_blank(),legend.position = 'none',
strip.text = element_text(size = 14))+theme(panel.spacing = unit(.5, 'lines'), plot.margin = margin(1,0,0,7, 'cm'))+scale_size(range = c(1,8))+
ggsn::scalebar(data = resplot, location = 'topleft',
dist = 6, transform = TRUE, dist_unit = 'km', model = 'WGS84',
box.fill = c('black'), st.color = 'black', box.color = 'black', st.size = 3, st.dist = 0.1,
facet.var = c("year", 'icegroup'), facet.lev = c("2018", "pre"), anchor = anchorcoords)
tiff(filename = '/users/larshammer/Desktop/Manuscripts/Env Biol Fish/Round 2/Round 3 send/Round 4//Fig. 1_new_no_leg2.tiff',width = 6.5, height = 6, units = 'in', compression = 'lzw', res = 300)
p
# annotate('text', x = -81.125 , y = 72.35 , label = '+', color = 'grey60', size = 8)
## remember trbl like trouble is the order of margins
dev.off()
p <- ggmap(google_transparent)+
scale_x_continuous(limits=c(-81.4,-80.8), name="Longitude",expand = c(0.03,0.03), labels = scales::number_format(accuracy = 0.1))+ #Crop it to a better size for the area of interest
scale_y_continuous(limits=c(72.24,72.49),name="Latitude", labels = scales::number_format(accuracy = 0.1))+    #Because zoom 8 is a little big (use these scales)
geom_count(data=resplot,aes(x = Long, y = Lat, size = mean), fill = 'white',shape=21)+
geom_point(data = resindna, aes(x = Long, y = Lat), color = 'white', shape = 21, size = 0.7, show.legend = T)+
geom_segment(aes(x = -81.4, y = 72.28, xend = -81.32, yend = 72.265), color = 'white', size = 1, arrow = arrow(length = unit(0.3, "cm")))+
geom_segment(aes(x = -81.205, y = 72.365, xend = -81.125, yend = 72.35), color = 'black', size = 1, arrow = arrow(length = unit(0.3, "cm")))+
scale_size_continuous(breaks = c(0.001, 0.005, 0.01, 0.15, .3))+
facet_grid(year~icegroup, labeller = labeller(icegroup = grouplabs))+theme_bw()+
theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14),axis.text.x = element_text(angle = -90, vjust = .5),
legend.title = element_blank(), legend.text = element_blank(),legend.position = 'none',
strip.text = element_text(size = 14))+theme(panel.spacing = unit(.5, 'lines'), plot.margin = margin(1,0,0,7, 'cm'))+scale_size(range = c(1,8))+
ggsn::scalebar(data = resplot, location = 'topleft',
dist = 6, transform = TRUE, dist_unit = 'km', model = 'WGS84',
box.fill = c('black'), st.color = 'black', box.color = 'black', st.size = 4, st.dist = 0.1,
facet.var = c("year", 'icegroup'), facet.lev = c("2018", "pre"), anchor = anchorcoords)
tiff(filename = '/users/larshammer/Desktop/Manuscripts/Env Biol Fish/Round 2/Round 3 send/Round 4//Fig. 1_new_no_leg2.tiff',width = 6.5, height = 6, units = 'in', compression = 'lzw', res = 300)
p
# annotate('text', x = -81.125 , y = 72.35 , label = '+', color = 'grey60', size = 8)
## remember trbl like trouble is the order of margins
dev.off()
p <- ggmap(google_transparent)+
scale_x_continuous(limits=c(-81.4,-80.8), name="Longitude",expand = c(0.03,0.03), labels = scales::number_format(accuracy = 0.1))+ #Crop it to a better size for the area of interest
scale_y_continuous(limits=c(72.24,72.49),name="Latitude", labels = scales::number_format(accuracy = 0.1))+    #Because zoom 8 is a little big (use these scales)
geom_count(data=resplot,aes(x = Long, y = Lat, size = mean), fill = 'white',shape=21)+
geom_point(data = resindna, aes(x = Long, y = Lat), color = 'white', shape = 21, size = 0.7, show.legend = T)+
geom_segment(aes(x = -81.4, y = 72.28, xend = -81.32, yend = 72.265), color = 'white', size = 1, arrow = arrow(length = unit(0.3, "cm")))+
geom_segment(aes(x = -81.205, y = 72.365, xend = -81.125, yend = 72.35), color = 'black', size = 1, arrow = arrow(length = unit(0.3, "cm")))+
scale_size_continuous(breaks = c(0.001, 0.005, 0.01, 0.15, .3))+
facet_grid(year~icegroup, labeller = labeller(icegroup = grouplabs))+theme_bw()+
theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14),axis.text.x = element_text(angle = -90, vjust = .5),
legend.title = element_blank(), legend.text = element_blank(),legend.position = 'none',
strip.text = element_text(size = 14))+theme(panel.spacing = unit(.5, 'lines'), plot.margin = margin(1,0,0,7, 'cm'))+scale_size(range = c(1,8))+
ggsn::scalebar(data = resplot, location = 'topleft',
dist = 6, transform = TRUE, dist_unit = 'km', model = 'WGS84',
box.fill = c('black'), st.color = 'black', box.color = 'black', st.size = 3.5, st.dist = 0.1,
facet.var = c("year", 'icegroup'), facet.lev = c("2018", "pre"), anchor = anchorcoords)
tiff(filename = '/users/larshammer/Desktop/Manuscripts/Env Biol Fish/Round 2/Round 3 send/Round 4//Fig. 1_new_no_leg2.tiff',width = 6.5, height = 6, units = 'in', compression = 'lzw', res = 300)
p
# annotate('text', x = -81.125 , y = 72.35 , label = '+', color = 'grey60', size = 8)
## remember trbl like trouble is the order of margins
dev.off()
one <- ggplot(data = firsts, aes(x = Year, y = DOY))+geom_boxplot(outlier.shape = NA) + theme_bw()+
geom_point(size = 2.5, alpha = 0.6, position = position_jitter(width = 0.2, height = 0))+ylab("Day of the year")+
scale_y_continuous(breaks = c(165,170,175,180),labels = c('June 14', 'June 19', 'June 24', 'June 29'))+
theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14))
two <- ggplot(data = firsts, aes(x = Year, y = DaysFromIce))+geom_boxplot(outlier.shape = NA) + theme_bw()+
geom_point(size = 2.5, alpha = 0.6, position = position_jitter(width = 0.2, height = 0))+ylab("Days between fish entry and ice-off date")+
scale_y_continuous(limits = c(-16,0))+
theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14))
tiff(filename = '/users/larshammer/Desktop/Manuscripts/Env Biol Fish/Round 2/Round 3 send/Round 4//Fig3_nwq.tiff',width = 7,height = 4.5, units = 'in', compression = 'lzw', res = 300)
grid.arrange(one, two, nrow = 1)
dev.off()
citation()
load("~/Desktop/AllCharData/Rscripts/NewModels6_25.RData")
## non normal
shapiro.test(c(LASTS2$TL, LASTS2$Condition2))
ptow
## non normal
shapiro.test(c(LASTS3$TL, LASTS3$Condition))
mshapiro_test(LASTS3[, 2:3])
qqplot(x = LASTS3$Condition, y = LASTS3$TL)
kruskal.test(TL ~ DirectionGroups, data = LASTS3)
kruskal.test(TL ~ DirectionGroups, data = LASTS3)
kruskal.test(Condition100 ~ DirectionGroups, data = LASTS3)
ptow
## non normal
shapiro.test(c(LASTS2$TL, LASTS2$Condition2))
shapiro.test(LASTS$TL)
shapiro.test(LASTS$Condition100)
shapiro.test(LASTS3$Condition100
)
load("~/Desktop/CrustaceanReview/New Data/CrustaceanMaps.RData")
View(tagmet3)
View(tmDF2)
View(tagmet2)
table(tagmet2)
tagmet2 %>% group_by(New_Water, Method2) %>% summarize(sum(count))
library(tidyverse)
tagmet2 %>% group_by(New_Water, Method2) %>% summarize(sum(count))
View(tagmet2)
tagmet2 %>% group_by(NewRegion, New_Water, Method2) %>% summarize(sum(count))
View(Data3)
load("~/Desktop/AllCharData/Rscripts/CharStomachs2_1_22.RData")
View(FOO2)
load("~/Desktop/AllCharData/Rscripts/CharStomachs2_14_22.RData")
View(Binge)
View(content17)
View(Allcharinfo)
View(content17)
##looking at condition by date
conddate <- condinfo
View(conddate)
ggplot(conddate, aes(x = doy, y = Condition))+geom_point()+facet_grid(~Year)
library(tidyverse)
library(stringr)
library(janitor)
library(lme4)
library(lmerTest)
library(MuMIn)
library(pscl)
library(car)
library(gridExtra)
library(grid)
library(dplyr)
ggplot(conddate, aes(x = doy, y = Condition))+geom_point()+facet_grid(~Year)
##looking at condition by date
conddate <- subset(condinfo, Year != 2019)
ggplot(conddate, aes(x = doy, y = Condition))+geom_point()+facet_grid(~Year)
ggplot(conddate, aes(x = doy, y = Condition, color = year))+geom_point()+geom_smooth()
ggplot(conddate, aes(x = doy, y = Condition, color = Year))+geom_point()+geom_smooth()
glm(formula = Condition~doy*Year, data = conddate)
summary(glm(formula = Condition~doy*Year, data = conddate))
ggplot(conddate, aes(x = doy, y = Condition, color = Year))+geom_point()+geom_smooth()
ggplot(conddate, aes(x = doy, y = Condition, color = Year))+geom_point()
ggplot(conddate[which(Conddate$Year == 2018),], aes(x = doy, y = Condition, color = Year))+geom_point()
ggplot(conddate[which(conddate$Year == 2018),], aes(x = doy, y = Condition, color = Year))+geom_point()
conddate18 <- subset(conddate, Year == 2018)
summary(lm(Condition~doy, conddate18))
ggplot(Allcharinfo, aes(x = doy, y = TL))+geom_point()
ggplot(Allcharinfo, aes(x = doy, y = Condition))+geom_point()
## Conditioninfo subset bad data
condinfo <- subset(Allcharinfo, Condition > 0.03)
ggplot(Allcharinfo, aes(x = doy, y = Condition))+geom_point()
condinfo %>%
group_by(Year) %>%
summarise(mean = mean(Condition, na.rm = T), se = se(Condition), min = min(Condition, na.rm = T), max = max(Condition, na.rm = T))
ggplot(condinfo, aes(x = doy, y = Condition))+geom_point()+facet_grid(~ Year)
ggplot(condinfo, aes(x = doy, y = Condition))+geom_point()
ggplot(condinfo, aes(x = doy, y = Condition, color = Year))+geom_point()
## consumption by sampling date
ggplot(AllStomachs, aes(x = doy, y = PercentWeight, color = Year))+geom_point()+geom_smooth()
View(AllStomachs)
## consumption by sampling date
ggplot(AllStomachs, aes(x = DOY, y = PercentWeight, color = Year))+geom_point()+geom_smooth()
BingelmF <- lmer(PercentWeight~ Mass+Year, data = Binge, na.action = "na.fail")
Bingelm2 <- lm(PercentWeight~ Mass+Year, data = Binge, na.action = "na.fail")
vif(Bingelm2)
dredge(Bingelm2)
Bingelm2 <- lm(PercentWeight~ Mass+Month+Year, data = Binge, na.action = "na.fail")
vif(Bingelm2)
dredge(Bingelm2)
Bingelm2 <- lm(PercentWeight~ Mass+Year, data = Binge, na.action = "na.fail")
vif(Bingelm2)
dredge(Bingelm2)
## consumption by sampling date
ggplot(AllStomachs, aes(x = DOY, y = PercentWeight, color = Year))+geom_point()+geom_smooth()+ylab("Relative Consumption)")
## consumption by sampling date
ggplot(AllStomachs, aes(x = DOY, y = PercentWeight, color = Year))+geom_point()+geom_smooth()+ylab("Relative Consumption")
ggplot(condinfo, aes(x = doy, y = Condition))+geom_point()+facet_grid(~ Year)
ggplot(condinfo, aes(x = doy, y = Condition, color = Year))+geom_point()
##looking at condition by date
conddate <- subset(condinfo, Year != 2019)
ggplot(conddate[which(conddate$Year == 2018),], aes(x = doy, y = Condition, color = Year))+geom_point()
ggplot(conddate, aes(x = doy, y = Condition, color = Year))+geom_point()
ggplot(conddate, aes(x = doy, y = Condition, color = Year))+geom_point()+geom_smooth(method = 'lm')
ggplot(conddate, aes(x = doy, y = Condition, color = Year))+geom_point()+geom_smooth(method = 'lm', se = FALSE)
load("~/Desktop/AllCharData/Rscripts/DetectionsBothYears.RData")
View(BothWOO)
list1 <- list(a = c(1,2,4,5),
b = c(2,5,6,76,2),
c = c(23,9,4,5,12,22))
View(list1)
d = c(2,2,2,2))
list1 <- list(a = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2)),
b = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2)),
d = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2)))
View(list1)
list1[a]
list1[1]
dput <- list1 <- list(a = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2)),
b = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2)),
d = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2)))
dput(list1 <- list(a = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2)),
b = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2)),
d = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2))))
list2 <- list(a = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2),
name = 'a'),
b = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2),
name = 'b'),
d = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2),
name = 'c'))
list2[1]
name(list1[1])
names(list1[1])
lapply(list1, function(x) cbind(list1, name = names(x)[1]))
lapply(list1, function(x) cbind(list1, name = names(x)))
lapply(list1, function(x) cbind(list1, name = names(x[1])))
dput(list1)
dput(list2)
lapply(names(list1), function(x) cbind(list1[[x]], name = x))
list1 <- list(abc = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2)),
bcd = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2)),
def = data.frame(a = c(1,2,4,5),
b = c(1,1,1,1),
d = c(2,2,2,2)))
list2 <- lapply(names(list1), function(x) cbind(list1[[x]], name = substr(x, 1,2))
list2 <- lapply(names(list1), function(x) cbind(list1[[x]], name = substr(x, 1,2)))
list2 <- lapply(names(list1), function(x) cbind(list1[[x]], name = substr(x, 1,2)))
View(list2)
list2[1]
df <- data.frame(A = c(1:24),
B = c(2:25))
View(df)
dput(df)
output <- c(rep('F', 23),'T')
output
dput(output)
is.na(df$1)
is.na(df$A)
rete <- function(x) ifelse(row(x) < nrow(x), 'F', 'T')
rete(df)
if.last <- function(x) ifelse(row(x) < nrow(x), 'F', 'T')
if.last(df)
df$new_variable <- ifelse(if.last(df) == 'T' & B == 25, 'Success', 'Failure')
df$new_variable <- ifelse(if.last(df) == 'T' & df$B == 25, 'Success', 'Failure')
df$new_variable <- ifelse(if.last(df) == 'T' & df$B == 25, 0, df$B)
if.last(df)
if.last <- function(x) ifelse(row(x) < nrow(x), 'F', 'T')
if.last(df)
df$new_variable <- ifelse(if.last(df) == 'T' & df$B == 25, 0, df$B)
df <- data.frame(A = c(1:24),
B = c(2:25))
if.last(df)
df$new_variable <- ifelse(if.last(df) == 'T' & df$B == 25, 0, df$B)
tail(df)
df <- data.frame(A = c(1:24),
B = c(2:25))
df$new_variable <- ifelse(if.last(df) == 'T' & df$B == 25, 0, df$B)
tail(df)
df <- data.frame(A = c(1:24),
B = c(2:25))
df$new_variable <- ifelse(if.last(df[,1]) == 'T' & df$B == 25, 0, df$B)
if.last(df)
df$new_variable <- ifelse(if.last(df$A) == 'T' & df$B == 25, 0, df$B)
row(df$A)
nrow(df$A)
nrow$df
nrow(df)
df <- data.frame(A = c(1:24),
B = c(2:25))
dput(df)
output <- c(rep('F', 23),'T')
dput(output)
if.last <- function(x) ifelse(row(x) < nrow(x), 'F', 'T')
if.last(df)
df$new_variable <- ifelse(if.last(df) == 'T', 0, df$B)
View(df)
tail(df)
tail(df)
View(df)
tail(df)
View(df)
tail(df, n = 3)
df <- data.frame(A = c(1:24),
B = c(2:25))
dput(df)
output <- c(rep('F', 23),'T')
dput(output)
if.last <- function(x) ifelse(row(x) < nrow(x), 'F', 'T')
if.last(df)
df$new_variable <- ifelse(if.last(df) == 'T', 0, df$B)
tail(df, n = 3)
View(df)
str(df)
df$new_variable
1:nrow(df) == nrow(df)
if.last2 <- function(x) 1:nrow(x) == nrow(x)
if.last2(df)
df <- data.frame(A = c(1:24),
B = c(2:25))
df$new_variable <- ifelse(if.last2(df) == 'T', 0, df$B)
View(df)
if.last2(df)
df$new_variable <- ifelse(if.last2(df) == 'T', 0, df$B)
View(df)
if.last2 <- function(data) 1:nrow(data) == nrow(data)
if.last2(df)
df$new_variable <- ifelse(if.last2(df) == 'T', 0, df$B)
View(df)
df$new_variable <- ifelse(if.last2(df) == 'TRUE', 0, df$B)
View(df)
if.last3 <- function(data) row(data) == nrow(data)
if.last3(df)
df$new_variable <- ifelse(if.last3(df) == 'TRUE', 0, df$B)
View(df)
tail(df, n = 3)
if.last3 <- function(data) nrow(data) == nrow(data)
if.last3(df)
df$new_variable <- ifelse(if.last3(df) == 'TRUE', 0, df$B)
tail(df, n = 3)
if.last <- function(x) ifelse(row(x) < nrow(x), 'F', 'T')
df$new_variable <- ifelse(if.last(df) == 'TRUE', 0, df$B)
View(df)
View(df)
tail(df, n = 3)
df <- data.frame(A = c(1:24),
B = c(2:25))
df$new_variable <- ifelse(if.last(df) == 'TRUE', 0, df$B)
tail(df, n = 3)
str(df)
tail(df, n = 3)
df$new_variable
if.last3(df)
if.last2(df)
df <- data.frame(v1 = c(1,1,0,0,0,0,1,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1),
v2 = c(1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,1,1,0,1))
View(df)
df <- data.frame(v1 = c(1,1,0,0,0,0,1,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1),
v2 = c(1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,1,1,0,1),
flag = rep(NA, 22))
View(df)
df2 <- df
df2$flag <- case_when(v1 == 0 & lead(v2)== 0 ~ 'flag',
v1 != 0 & lead(v2)!= 0 ~ 'no flag',
v1 == 0 & lead(v2)!= 0 ~ 'no flag',
v1 != 0 & lead(v2)= 0 ~ 'no flag')
df2$flag <- case_when(v1 == 0 & lead(v2)== 0 ~ 'flag',
v1 != 0 & lead(v2)!= 0 ~ 'no flag',
v1 == 0 & lead(v2)!= 0 ~ 'no flag',
v1 != 0 & lead(v2)== 0 ~ 'no flag')
library(dplyr)
df2$flag <- case_when(v1 == 0 & lead(v2)== 0 ~ 'flag',
v1 != 0 & lead(v2)!= 0 ~ 'no flag',
v1 == 0 & lead(v2)!= 0 ~ 'no flag',
v1 != 0 & lead(v2)== 0 ~ 'no flag')
df <- data.frame(v1 = c(1,1,0,0,0,0,1,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1),
v2 = c(1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,1,1,0,1),
flag = rep(NA, 22))
df2 <- df %>%
mutate( flag = case_when(v1 == 0 & lead(v2)== 0 ~ 'flag',
v1 != 0 & lead(v2)!= 0 ~ 'no flag',
v1 == 0 & lead(v2)!= 0 ~ 'no flag',
v1 != 0 & lead(v2)== 0 ~ 'no flag'))
View(df2)
dput(df)
df2 <- df %>%
mutate( flag = case_when(v1 == 0 & lead(v2)== 0 ~ 'flag'))
flag = c(rep('NA', 3), rep('flag', 4), rep('NA', 13), rep('flag', 2), 'NA')
df3 <- data.frame(v1 = c(1,1,0,0,0,0,1,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1),
v2 = c(1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,1,1,0,1),
flag = c(rep('NA', 3), rep('flag', 4), rep('NA', 13), rep('flag', 2), 'NA'))
df3 <- data.frame(v1 = c(1,1,0,0,0,0,1,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1),
v2 = c(1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,1,1,0,1),
flag = c(rep('NA', 3), rep('flag', 4), rep('NA', 12), rep('flag', 2), 'NA'))
View(df3)
df3 <- data.frame(v1 = c(1,1,0,0,0,0,1,1,0,1,0,1,0,1,1,1,1,0,1,0,0,1),
v2 = c(1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,1,1,0,1),
flag = c(rep(NA, 3), rep('flag', 4), rep(NA, 12), rep('flag', 2), NA))
dput(df3)
df4 <- df %>%
mutate(f = v1==0 & lead(v2) == 0,
flag = ifelse(f|lag(f), 'flag', NA))
View(df4)
df4 <- df %>%
mutate(f = v1==0 & lead(v2) == 0)
View(df4)
df4$f|lag(df4$f)
df4 <- df %>%
mutate(f = v1==0 & lead(v2) == 0)
set.seed(42)
setwd("UNH Research/Hammer_Hermann/Data/") #Nate's file structure
setwd("/Users/larshammer/Hammer_Hermann/Data/") #Lars' file structure
library(tidyverse)
library(ggplot2)
library(reshape2)
library(tidyr)
library(dplyr)
library(grid)
library(RColorBrewer)
library(readr)
library(gridExtra)
library(lubridate)
library(reshape2)
library(vegan)
library(MuMIn)
library(BiodiversityR)
library(rphylopic)
library(png)
#Colorblind friendly palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#To use, add command for scale_fill_manual(values=cbPalette)
theme_set(theme_bw(base_size=25))
'%notin%'<-Negate('%in%')
details<-read_csv("all_dietcontents_final_v2.csv")
summaries<-read_csv("all_dietsummaries_final.csv")
dietMat<-read_csv("all_diet_PAdietMat_final_v2.csv")
setwd("/Users/larshammer/Hammer_Hermann/Data/") #Lars' file structure
sculppaa <- subset(dietMat, Species == 'Fourhorn' | Species == 'Slimy')
charpaa <- subset(dietMat, Species == 'Arctic char')
##needs to be dataframe for accumcomp to work
sculpenv <- data.frame(sculppaa[,1:3])
charenv <- data.frame(charpaa[,1:3])
sculpcom <- data.frame(sculppaa[,13:31])
charcom <- data.frame(charpaa[,13:31])
##creation of data must be done separately as far as I know
##sculpin
Accum.sculp <- accumcomp(sculpcom, y=sculpenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.sculp
accum.longsculp <- accumcomp.long(Accum.sculp, ci = NA, label.freq = 5)
head(accum.longsculp)
##test for sculpin
sculpenv2 <- sculpenv
sculpenv2$test <- 1
Accum.sculp2 <- accumcomp(sculpcom, y = sculpenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longsculp2 <- accumcomp.long(Accum.sculp2, ci = NA, label.freq = 5)
accum.longsculp2$Species <- 'Sculpin'
##char
Accum.char <- accumcomp(charcom, y=charenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.char
accum.longchar <- accumcomp.long(Accum.char, ci = NA, label.freq = 5)
head(accum.longchar)
##test for char
charenv2 <- charenv
charenv2$test <- 1
Accum.char2 <- accumcomp(charcom, y = charenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longchar2 <- accumcomp.long(Accum.char2, ci = NA, label.freq = 5)
accum.longchar2$Species <- 'Arctic char'
accum.longchar$Species <- 'Arctic char' ##creating a column for species so we can bind together
accum.longsculp$Species <- 'Sculpin'
accum.long <- rbind(accum.longchar, accum.longsculp)
accum.long2 <- rbind(accum.longchar2, accum.longsculp2)
##plot
PAAplot <- ggplot(data = accum.long, aes(x = Sites, y = Richness,ymax = UPR, ymin = LWR))+
facet_wrap(~Species, ncol = 1)+
geom_line(aes(color = Grouping), size = 2)+
geom_point(data=subset(accum.long, labelit==TRUE),
aes(colour=Grouping),size = 5)+
scale_color_manual(values = c('black', 'grey50', 'grey80'))+
geom_line(data = accum.long2, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR), lty = 2)+
# geom_ribbon(aes(color=Grouping), alpha = 0.2, show.legend = F)+
labs(x = 'Number of Samples', y = 'Species Richness', color = 'Year')+theme_bw()
PAAplot
library(car)
library(MuMIn)
library(lme4)
library(lmerTest)
relcon <- summaries[,1:9] ## unneccessary columns
relcon <- subset(relcon, !is.na(Diet_Mass_g)) ## removing fish with unknown diet masses
relcon <- subset(relcon, !is.na(Mass_g))
n_distinct(relcon$Fish_ID) ##127 useable fish for relcon analysis
relcon %>% group_by(Species) %>% n_distinct()
relcon %>% group_by(Species) %>% summarise(n = n_distinct())
View(relcon)
relcon %>% group_by(Species) %>% summarise(n = n())
table(relcon$feed, relcon$species2) ##looks right at least for char
relcon <- summaries[,1:9] ## unneccessary columns
relcon <- subset(relcon, !is.na(Diet_Mass_g)) ## removing fish with unknown diet masses
relcon <- subset(relcon, !is.na(Mass_g)) ## removing fish with unknown masses
n_distinct(relcon$Fish_ID) ##127 useable fish for relcon analysis
##relative consumption column
relcon$relative_consumption <- (relcon$Diet_Mass_g/relcon$Mass_g)*100
relcon$Date_pos <- as.POSIXct(relcon$Date, format = '%m/%d/%y')
relcon$month <- factor(month(relcon$Date_pos)) ##make sure month is a factor
relcon$Year <- factor(relcon$Year) ## make sure year is a factor
relcon$species2 <- factor(ifelse(relcon$Species == 'Slimy' | relcon$Species == 'Fourhorn', 'Sculpin', 'Arctic char'))
relcon %>%
group_by(species2, Year) %>%
summarize(mean = mean(relative_consumption))
relcon %>% group_by(species2) %>%
summarize(min = min(relative_consumption), max = max(relative_consumption))
relcon %>%
group_by(species2, Year) %>%
summarize(mean = mean(relative_consumption))
relcon %>% group_by(species2) %>%
summarize(min = min(relative_consumption), max = max(relative_consumption), mean = mean(relative_consumption))
relcon %>%
group_by(species2, Year) %>%
summarize(mean = mean(relative_consumption))
