accum.long <- rbind(accum.longchar, accum.longsculp)
##plot
PAAplot <- ggplot(data = accum.long, aes(x = Sites, y = Richness,ymax = UPR, ymin = LWR))+
facet_wrap(~Species, ncol = 1)+
geom_line(aes(color = Grouping), size = 2)+
geom_point(data=subset(accum.long, labelit==TRUE),
aes(colour=Grouping),size = 5)+
scale_color_manual(values = c('black', 'grey50', 'grey80'))+
# geom_ribbon(aes(color=Grouping), alpha = 0.2, show.legend = F)+
labs(x = 'Number of Samples', y = 'Species Richness', color = 'Year')+theme_bw()
library(car)
library(MuMIn)
library(lme4)
library(lmerTest)
View(summaries)
##removing unneccesary columns and unusable data
relcon <- summaries[,1:9] ## unneccessary columns
relcon <- subset(relcon, !is.na(Diet_Mass_g)) ## removing fish with unknown diet masses
relcon <- subset(relcon, !is.na(Mass_g)) ## removing fish with unknown masses
n_distinct(relcon$Fish_ID) ##127 useable fish for relcon analysis
##relative consumption column
relcon$relative_consumption <- (relcon$Diet_Mass_g/relcon$Mass_g)*100
relcon$Date_pos <- as.POSIXct(relcon$Date, format = '%m/%d/%y')
relcon$month <- factor(month(relcon$Date_pos)) ##make sure month is a factor
relcon$Year <- factor(relcon$Year) ## make sure year is a factor
relcon$species2 <- factor(ifelse(relcon$Species == 'Slimy' | relcon$Species == 'Fourhorn', 'Sculpin', 'Arctic char'))
relcon %>%
group_by(species2, Year) %>%
summarize(mean = mean(relative_consumption))
rm(list=ls())
library(tidyverse)
library(stringr)
library(janitor)
library(lme4)
library(lmerTest)
library(MuMIn)
library(pscl)
library(car)
library(gridExtra)
library(grid)
library(dplyr)
## this is for patterned bar plots
remotes::install_github("coolbutuseless/ggpattern")
##used in number of stomachs containing section
## extract the numbers from a string
numextract <- function(string){
str_extract(string, "\\-*\\d+\\.*\\d*")
}
se<-function(x) sd(x, na.rm = T)/sqrt(length(x))
## importing data
setwd('/users/larshammer/Desktop/AllCharData/Stomachs')
AllStomachs <- read.csv('AllStomachs.csv', na.strings = c("", "NA"))
# stomachs <- read.csv('TR18StomachSampling.csv', na.strings = "-")
cont18 <- read.csv('TR18TummyContent.csv', na.strings = "-")
content19 <- read.csv("TR19TummyContent.csv")
content <- rbind(cont18, content19)
Clengths18 <- read.csv('TR18ContentLengths.csv', na.strings = "-")
Clengths19 <- read.csv("TR19ContentLengths.csv")
Clengths <- rbind(Clengths18, Clengths19)
charinfo <- read.csv('CharSamples.csv', na.strings = "-")
FykeLengths <- read.csv('TR18FykeLengths.csv', na.strings = "-")
fullness2018 <- read.csv('TR18StomachSampling.csv', na.strings = '-')
AllStomachs$Date <- as.POSIXct(AllStomachs$Date, format = '%m/%d/%Y')
AllStomachs$Year <- as.factor(lubridate::year(AllStomachs$Date))
AllStomachs$Month <- as.factor(lubridate::month(AllStomachs$Date,label = T, abbr = T))
AllStomachs$Month <- droplevels(AllStomachs$Month)
## not an accurate measure of content weight, just preliminary
AllStomachs$ContentWeight <- AllStomachs$StomachWeight-AllStomachs$EmptyWeight
View(AllStomachs)
## putting in values for first 3 fish from TR18TummyContent data
## these have been dried and weighed soo slightly different likely
AllStomachs[1,25] <- 78.331
AllStomachs[2,25] <- 2.834
AllStomachs[3,25] <- 85.027
rete <- AllStomachs[,c(3,25)]
View(rete)
rm(list=ls())
set.seed(42)
setwd("../../Hammer_Hermann/Data/") #Nate's file structure
setwd("/Users/larshammer/Hammer_Hermann/") #Lars' file structure
library(tidyverse)
library(ggplot2)
library(reshape2)
library(tidyr)
library(dplyr)
library(grid)
library(RColorBrewer)
library(readr)
library(gridExtra)
library(lubridate)
library(reshape2)
library(vegan)
library(MuMIn)
#Colorblind friendly palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#To use, add command for scale_fill_manual(values=cbPalette)
theme_set(theme_bw(base_size=25))
'%notin%'<-Negate('%in%')
details<-read_csv("Data/all_dietcontents_final_v2.csv")
summaries<-read_csv("Data/all_dietsummaries_final.csv")
dietMat<-read_csv("Data/all_diet_PAdietMat_final_v2.csv")
sculppaa <- subset(dietMat, Species == 'Fourhorn' | Species == 'Slimy')
charpaa <- subset(dietMat, Species == 'Arctic char')
##needs to be dataframe for accumcomp to work
sculpenv <- data.frame(sculppaa[,1:3])
charenv <- data.frame(charpaa[,1:3])
sculpcom <- data.frame(sculppaa[,13:31])
charcom <- data.frame(charpaa[,13:31])
##creation of data must be done separately as far as I know
##sculpin
Accum.sculp <- accumcomp(sculpcom, y=sculpenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.sculp
accum.longsculp <- accumcomp.long(Accum.sculp, ci = NA, label.freq = 5)
head(accum.longsculp)
##char
Accum.char <- accumcomp(charcom, y=charenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.char
accum.longchar <- accumcomp.long(Accum.char, ci = NA, label.freq = 5)
head(accum.longchar)
accum.longchar$Species <- 'Arctic char' ##creating a column for species so we can bind together
accum.longsculp$Species <- 'Sculpin'
accum.long <- rbind(accum.longchar, accum.longsculp)
##plot
PAAplot <- ggplot(data = accum.long, aes(x = Sites, y = Richness,ymax = UPR, ymin = LWR))+
facet_wrap(~Species, ncol = 1)+
geom_line(aes(color = Grouping), size = 2)+
geom_point(data=subset(accum.long, labelit==TRUE),
aes(colour=Grouping),size = 5)+
scale_color_manual(values = c('black', 'grey50', 'grey80'))+
# geom_ribbon(aes(color=Grouping), alpha = 0.2, show.legend = F)+
labs(x = 'Number of Samples', y = 'Species Richness', color = 'Year')+theme_bw()
##only do this once
# tiff('Figures/PreyAccumulationCurve.tiff', width = 6.5, height = 5.5, res = 300, units = 'in')
PAAplot
dev.off()
## relative consumption GLM work using summaries dataset
library(car)
library(MuMIn)
library(lme4)
library(lmerTest)
##removing unneccesary columns and unusable data
relcon <- summaries[,1:9] ## unneccessary columns
relcon <- subset(relcon, !is.na(Diet_Mass_g)) ## removing fish with unknown diet masses
relcon <- subset(relcon, !is.na(Mass_g)) ## removing fish with unknown masses
n_distinct(relcon$Fish_ID) ##127 useable fish for relcon analysis
##relative consumption column
relcon$relative_consumption <- (relcon$Diet_Mass_g/relcon$Mass_g)*100
relcon$Date_pos <- as.POSIXct(relcon$Date, format = '%m/%d/%y')
relcon$month <- factor(month(relcon$Date_pos)) ##make sure month is a factor
relcon$Year <- factor(relcon$Year) ## make sure year is a factor
relcon$species2 <- factor(ifelse(relcon$Species == 'Slimy' | relcon$Species == 'Fourhorn', 'Sculpin', 'Arctic char'))
relcon %>%
group_by(species2, Year) %>%
summarize(mean = mean(relative_consumption))
relcon %>% group_by(species2) %>%
summarize(min = min(relative_consumption), max = max(relative_consumption))
bingelm1 <- glm(relative_consumption~species2 + Year + month + Mass_g, data = relcon, na.action = 'na.fail', family = 'gaussian')
vif(bingelm1)
dredge(bingelm1)
ggplot(relcon)+
geom_point(aes(x = Year, y = relative_consumption))+
facet_grid(~species2)
ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption))+
facet_grid(~species2)
ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption))+
geom_point()+
facet_grid(~species2)
ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption))+
geom_point(aes(x = Year, y = relative_consumption))+
facet_grid(~species2)
ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption), position = position_jitter(width = .2))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
getwd()
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = Year, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption), position = position_jitter(width = .2))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
tiff('Figures/RelativeConsumption_year.tiff', width = 6.5, height = 5.5, res = 300, units = 'in')
relconplot
dev.off()
#Emphasizing species differences
ggplot(fooYears,aes(prey,foo,fill=Year))+
geom_col(position="dodge",color="black")+
scale_fill_viridis_d(name="Species")+
scale_y_continuous(name="Frequency of Occurrence",limits=c(0,1),expand=expansion(add=0))+
scale_x_discrete(name="Diet Item")+
theme(axis.text.x=element_text(angle=20,hjust=1,vjust=1.12),
axis.title.x=element_text(vjust=5))+
facet_wrap(~species,nrow=2)
##looking at mass
ggplot(relcon)+
geom_point(aes(x = mass_g, y = relative_consumption), position = position_jitter(width = .2))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
##looking at mass
ggplot(relcon)+
geom_point(aes(x = Mass_g, y = relative_consumption), position = position_jitter(width = .2))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
##looking at mass
ggplot(relcon)+
geom_point(aes(x = Mass_g, y = relative_consumption), position = position_jitter(width = .2))+
facet_grid(~species2, scales = "free_x")+
labs(y = 'Relative Consumption (%)')
##looking at month
ggplot(relcon)+
geom_boxplot(aes(x = month, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = month, y = relative_consumption), position = position_jitter(width = .2))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
vif(bingelm1)
dredge(bingelm1)
relcon %>% group_by(species2) %>%
summarize(min = min(relative_consumption), max = max(relative_consumption))
relcon %>%
group_by(species2, Year) %>%
summarize(mean = mean(relative_consumption))
##looking at mass
ggplot(relcon)+
geom_point(aes(x = Mass_g, y = relative_consumption), position = position_jitter(width = .2))+
facet_grid(~species2, scales = "free_x")+
labs(y = 'Relative Consumption (%)')
dredge(bingelm1)
summart(bingelm1)
summary(bingelm1)
View(accum.long)
?accumcomp
?accumcomp.long
View(dietMat)
# Actual data ---------------------------------------------------
set.seed(42)
setwd("/Users/larshammer/Hammer_Hermann/") #Lars' file structure
library(tidyverse)
library(ggplot2)
library(reshape2)
library(tidyr)
library(dplyr)
library(grid)
library(RColorBrewer)
library(readr)
library(gridExtra)
library(lubridate)
library(reshape2)
library(vegan)
library(MuMIn)
library(BiodiversityR)
library(rphylopic)
library(png)
#Colorblind friendly palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#To use, add command for scale_fill_manual(values=cbPalette)
theme_set(theme_bw(base_size=25))
'%notin%'<-Negate('%in%')
details<-read_csv("all_dietcontents_final_v2.csv")
summaries<-read_csv("all_dietsummaries_final.csv")
dietMat<-read_csv("all_diet_PAdietMat_final_v2.csv")
setwd("/Users/larshammer/Hammer_Hermann/Data/") #Lars' file structure
details<-read_csv("all_dietcontents_final_v2.csv")
summaries<-read_csv("all_dietsummaries_final.csv")
dietMat<-read_csv("all_diet_PAdietMat_final_v2.csv")
sculppaa <- subset(dietMat, Species == 'Fourhorn' | Species == 'Slimy')
charpaa <- subset(dietMat, Species == 'Arctic char')
##needs to be dataframe for accumcomp to work
sculpenv <- data.frame(sculppaa[,1:3])
charenv <- data.frame(charpaa[,1:3])
sculpcom <- data.frame(sculppaa[,13:31])
charcom <- data.frame(charpaa[,13:31])
##creation of data must be done separately as far as I know
##sculpin
Accum.sculp <- accumcomp(sculpcom, y=sculpenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
Accum.sculp
accum.longsculp <- accumcomp.long(Accum.sculp, ci = NA, label.freq = 5)
head(accum.longsculp)
##char
Accum.char <- accumcomp(charcom, y=charenv, factor = 'Year',
method ='exact', conditioned = F, plotit = F)
ccum.char
accum.longchar <- accumcomp.long(Accum.char, ci = NA, label.freq = 5)
head(accum.longchar)
accum.longchar$Species <- 'Arctic char' ##creating a column for species so we can bind together
accum.longsculp$Species <- 'Sculpin'
accum.long <- rbind(accum.longchar, accum.longsculp)
##plot
PAAplot <- ggplot(data = accum.long, aes(x = Sites, y = Richness,ymax = UPR, ymin = LWR))+
facet_wrap(~Species, ncol = 1)+
geom_line(aes(color = Grouping), size = 2)+
geom_point(data=subset(accum.long, labelit==TRUE),
aes(colour=Grouping),size = 5)+
scale_color_manual(values = c('black', 'grey50', 'grey80'))+
# geom_ribbon(aes(color=Grouping), alpha = 0.2, show.legend = F)+
labs(x = 'Number of Samples', y = 'Species Richness', color = 'Year')+theme_bw()
PAAplot
View(charcom)
View(charenv)
View(accum.long)
##test for sculpin
Accum.sculp2 <- accumcomp(sculpcom, y = sculpenv, method = 'exact', conditioned = F, plotit = F)
##test for sculpin
Accum.sculp2 <- accumcomp(sculpcom, method = 'exact', conditioned = F, plotit = F)
Accum.sculp
View(sculpenv)
##test for sculpin
sculpenv2 <- sculpenv
sculpenv2$test <- 1
View(sculpenv2)
Accum.sculp2 <- accumcomp(sculpcom, y = sculpenv, factor = 'test', method = 'exact', conditioned = F, plotit = F)
Accum.sculp2 <- accumcomp(sculpcom, y = sculpenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longsculp2 <- accumcomp.long(Accum.sculp2, ci = NA, label.freq = 5)
View(accum.longsculp2)
##test for char
charenv2 <- charenv
charenv2$test <- 1
##test for char
charenv2 <- charenv
charenv2$test <- 1
Accum.char2 <- accumcomp(charcom, y = charenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longchar2 <- accumcomp.long(Accum.char2, ci = NA, label.freq = 5)
accum.longsculp2$species <- 'Sculpin'
accum.longchar2$Species <- 'Arctic char'
accum.long2 <- rbind(accum.longchar2, accum.longsculp2)
View(accum.longchar2)
View(accum.longsculp)
View(accum.longchar2)
View(accum.longsculp)
##test for sculpin
sculpenv2 <- sculpenv
sculpenv2$test <- 1
Accum.sculp2 <- accumcomp(sculpcom, y = sculpenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longsculp2 <- accumcomp.long(Accum.sculp2, ci = NA, label.freq = 5)
accum.longsculp2$species <- 'Sculpin'
View(accum.longsculp2)
accum.long2 <- rbind(accum.longchar2, accum.longsculp2)
##test for sculpin
sculpenv2 <- sculpenv
sculpenv2$test <- 1
View(sculpenv2)
Accum.sculp2 <- accumcomp(sculpcom, y = sculpenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longsculp2 <- accumcomp.long(Accum.sculp2, ci = NA, label.freq = 5)
accum.longsculp2$species <- 'Sculpin'
View(accum.longsculp2)
accum.long2 <- rbind(accum.longchar2, accum.longsculp2)
sculpenv2 <- sculpenv
sculpenv2$test <- 1
Accum.sculp2 <- accumcomp(sculpcom, y = sculpenv2, factor = 'test', method = 'exact', conditioned = F, plotit = F)
accum.longsculp2 <- accumcomp.long(Accum.sculp2, ci = NA, label.freq = 5)
accum.longsculp2$Species <- 'Sculpin'
accum.long2 <- rbind(accum.longchar2, accum.longsculp2)
##plot
PAAplot <- ggplot(data = accum.long, aes(x = Sites, y = Richness,ymax = UPR, ymin = LWR))+
facet_wrap(~Species, ncol = 1)+
geom_line(aes(color = Grouping), size = 2)+
geom_point(data=subset(accum.long, labelit==TRUE),
aes(colour=Grouping),size = 5)+
scale_color_manual(values = c('black', 'grey50', 'grey80'))+
geom_line(data = accum.long2, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR))+
# geom_ribbon(aes(color=Grouping), alpha = 0.2, show.legend = F)+
labs(x = 'Number of Samples', y = 'Species Richness', color = 'Year')+theme_bw()
PAAplot
##plot
PAAplot <- ggplot(data = accum.long, aes(x = Sites, y = Richness,ymax = UPR, ymin = LWR))+
facet_wrap(~Species, ncol = 1)+
geom_line(aes(color = Grouping), size = 2)+
geom_point(data=subset(accum.long, labelit==TRUE),
aes(colour=Grouping),size = 5)+
scale_color_manual(values = c('black', 'grey50', 'grey80'))+
geom_line(data = accum.long2, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR), lty = 2)+
# geom_ribbon(aes(color=Grouping), alpha = 0.2, show.legend = F)+
labs(x = 'Number of Samples', y = 'Species Richness', color = 'Year')+theme_bw()
PAAplot
tiff('Figures/PreyAccumulationCurve.tiff', width = 6.5, height = 5.5, res = 300, units = 'in')
PAAplot
dev.off()
tiff('/Users/larshammer/Hammer_Hermann/Figures/PreyAccumulationCurve.tiff', width = 6.5, height = 5.5, res = 300, units = 'in')
PAAplot
dev.off()
library(car)
library(MuMIn)
library(lme4)
library(lmerTest)
##removing unneccesary columns and unusable data
relcon <- summaries[,1:9] ## unneccessary columns
relcon <- subset(relcon, !is.na(Diet_Mass_g)) ## removing fish with unknown diet masses
relcon <- subset(relcon, !is.na(Mass_g)) ## removing fish with unknown masses
n_distinct(relcon$Fish_ID) ##127 useable fish for relcon analysis
##relative consumption column
relcon$relative_consumption <- (relcon$Diet_Mass_g/relcon$Mass_g)*100
relcon$Date_pos <- as.POSIXct(relcon$Date, format = '%m/%d/%y')
relcon$month <- factor(month(relcon$Date_pos)) ##make sure month is a factor
relcon$Year <- factor(relcon$Year) ## make sure year is a factor
relcon$species2 <- factor(ifelse(relcon$Species == 'Slimy' | relcon$Species == 'Fourhorn', 'Sculpin', 'Arctic char'))
relcon %>%
group_by(species2, Year) %>%
summarize(mean = mean(relative_consumption))
relcon %>% group_by(species2) %>%
summarize(min = min(relative_consumption), max = max(relative_consumption))
View(relcon)
##first we need to determine factors affecting whether we feed or not
relcon$feed <- ifelse(relcon$relative_consumption > 0, 1, 0)
table(relcon$feed, relcon$Species)
table(relcon$feed, relcon$species2)
bingelm1 <- glm(feed~species2 + Year + month + Mass_g, data = relcon, na.action = 'na.fail', family = 'gamma')
?glm
bingelm1 <- glm(feed~species2 + Year + month + Mass_g, data = relcon, na.action = 'na.fail', family = 'Gamma')
bingelm1 <- glm(feed~species2 + Year + month + Mass_g, data = relcon, na.action = 'na.fail', family = 'binomial')
vif(bingelm1)
dredge(bingelm1)
bingelm1 <- glm(feed~species2 * Mass_g + Year + month, data = relcon, na.action = 'na.fail', family = 'binomial')
vif(bingelm1)
dredge(bingelm1)
bingelm1 <- glm(feed~species2 + Year + month, data = relcon, na.action = 'na.fail', family = 'binomial')
vif(bingelm1)
dredge(bingelm1)
ggplot(relcon)+
geom_boxplot(aes(x = species2, y = feed), outlier.shape = NA)+
geom_point(aes(x = species2, y = feed), position = position_jitter(width = .2))+
labs(y = 'Food in Stomach? (Y/N)')
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = species2, y = feed), outlier.shape = NA)+
geom_point(aes(x = species2, y = feed), position = position_jitter(width = .1))+
labs(y = 'Food in Stomach? (Y/N)')
ggplot(relcon)+
geom_boxplot(aes(x = species2, y = feed), outlier.shape = NA)+
geom_point(aes(x = species2, y = feed), position = position_jitter(width = .1))+
labs(y = 'Food in Stomach? (Y/N)')
ggplot(relcon)+
geom_boxplot(aes(x = species2, y = feed), outlier.shape = NA)+
geom_point(aes(x = species2, y = feed), position = position_jitter(width = .1, height = 0))+
labs(y = 'Food in Stomach? (Y/N)')
relconplot <- ggplot(relcon)+
geom_boxplot(aes(x = species2, y = feed), outlier.shape = NA, stat = 'mean')+
geom_point(aes(x = species2, y = feed), position = position_jitter(width = .1, height = 0))+
labs(y = 'Food in Stomach? (Y/N)')
ggplot(relcon)+
geom_boxplot(aes(x = species2, ymin = min(feed), lower = quantile(feed, .25),
middle = mean(feed), upper = quantile(feed, .75),
ymax = max(feed)), stat = "identity", outlier.shape = NA, stat = 'mean')+
geom_point(aes(x = species2, y = feed), position = position_jitter(width = .1, height = 0))+
labs(y = 'Food in Stomach? (Y/N)')
ggplot(relcon)+
geom_boxplot(aes(x = species2, ymin = min(feed), lower = quantile(feed, .25),
middle = mean(feed), upper = quantile(feed, .75),
ymax = max(feed)), stat = "identity", outlier.shape = NA)+
geom_point(aes(x = species2, y = feed), position = position_jitter(width = .1, height = 0))+
labs(y = 'Food in Stomach? (Y/N)')
ggplot(relcon)+
geom_boxplot(aes(x = species2, ymin = min(feed), lower = quantile(feed, .25),
middle = mean(feed), upper = quantile(feed, .75),
ymax = max(feed)), stat = "identity", outlier.shape = NA)
dredge(bingelm1)
##don't bother with mass because species are so different in weight already
bingelm1 <- glm(feed~Mass_g + Year + month, data = relcon, na.action = 'na.fail', family = 'binomial')
vif(bingelm1)
dredge(bingelm1) ##species is the only thing that comes out
ggplot(relcon)+
# geom_boxplot(aes(x = species2, ), stat = "identity", outlier.shape = NA)+
geom_point(aes(x = Mass_g, y = feed), position = position_jitter(width = .1, height = 0))+
labs(y = 'Food in Stomach? (Y/N)')
##don't bother with mass because species are so different in weight already
bingelm1 <- glm(feed~species2 + Year + month, data = relcon, na.action = 'na.fail', family = 'binomial')
vif(bingelm1)
dredge(bingelm1) ##species is the only thing that comes out
##now removing those who didn't feed
relcon2 <- subset(relcon, feed == 1)
bingelm2 <- glm(relative_consumption ~ species2 + year + month, data = relcon, na.action = 'na.fail', family = 'Gamma', link = 'inverse')
bingelm2 <- glm(relative_consumption ~ species2 + Year + month, data = relcon,
na.action = 'na.fail', family = 'Gamma', link = 'inverse')
bingelm2 <- glm(relative_consumption ~ species2 + Year + month, data = relcon,
na.action = 'na.fail', family = 'Gamma')
bingelm2 <- glm(relative_consumption ~ species2 + Year + month, data = relcon2,
na.action = 'na.fail', family = 'Gamma')
vif(bingelm2)
dredge(bingelm2)
ggplot(relcon2)+
geom_boxplot(aes(x = Year, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption), position = position_jitter(width = .2))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
tiff('/users/larshammer/Hammer_Hermann/Figures/RelativeConsumption_year.tiff', width = 6.5, height = 5.5, res = 300, units = 'in')
relconplot
dev.off()
bingelm2 <- glm(relative_consumption ~ species2 + Year + month + Mass_g, data = relcon2,
na.action = 'na.fail', family = 'Gamma')
vif(bingelm2)
dredge(bingelm2)
bingelm2 <- glm(relative_consumption ~ species2 * Mass_g + Year + month, data = relcon2,
na.action = 'na.fail', family = 'Gamma')
vif(bingelm2)
dredge(bingelm2)
bingelm2 <- glm(relative_consumption ~ species2 + Year + month, data = relcon2,
na.action = 'na.fail', family = 'Gamma')
vif(bingelm2)
dredge(bingelm2)
relconplot <- ggplot(relcon2)+
geom_boxplot(aes(x = Year, y = relative_consumption), outlier.shape = NA)+
geom_point(aes(x = Year, y = relative_consumption), position = position_jitter(width = .2))+
facet_grid(~species2)+
labs(y = 'Relative Consumption (%)')
